name: Publish a Go SDK to a repository
description: Checkout, update and push SDK

inputs:
  repository:
    description: |
      Repository to publish the Go SDK to.
      E.g. pulumi/pulumi-example-provider
    required: true
  base-ref:
    description: Ref to use as the parent commit. This can be a branch, tag or commit SHA.
    required: true
  source:
    description: Path to the directory containing the Go source to be published. This folder should contain at least a go.mod file.
    required: true
  path:
    description: |
      Path within the repository to publish the go module (e.g. "sdk").
      This will be used for coping the source into and prefixing the tag.
      If not specified, the root of the repository will be assumed.
    required: false
  version:
    required: true
    description: Version to be used to publish the SDKs. This should be valid semver version 2 format.
  additive:
    description: |
      Set to "true" to not delete all existing files before copying new source.
      Including only the SDK files reduces the download for end users.
    default: "false"
    required: false
  skip-go-get:
    description: Set to "true" to skip running `go get` on the newly pushed tag to ensure it is added to the go module cache.
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
      - name: Checkout Go SDK target repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          path: pulumi-publish-go-sdk-action
          fetch-depth: 0
          ref: ${{ inputs.base-ref }}

        # Avoid cluttering original repository checkout
        # https://github.com/actions/checkout/issues/197
      - name: Move to temp directory
        shell: bash
        run: mv pulumi-publish-go-sdk-action "${{ runner.temp }}"

      - name: Calculate tag
        id: git_tag
        shell: bash
        run: echo "git_tag=${{ inputs.path == '' && format('v{0}', inputs.version) || format('{0}/v{1}', inputs.path, inputs.version) }}" >> $GITHUB_OUTPUT

      - name: Calculate absolute source path
        shell: bash
        id: abs_path
        run: |
          echo -n "abs_path=" >> $GITHUB_OUTPUT &&
          realpath "${{ inputs.source }}" >> $GITHUB_OUTPUT

      - name: Calculate major version
        id: major_version
        shell: bash
        run: |
          echo -n "major_version=" >> $GITHUB_OUTPUT &&
          echo "${{ inputs.version }}" | cut -d. -f1 >> $GITHUB_OUTPUT

      - name: Configure git
        shell: bash
        working-directory: ${{ runner.temp }}/pulumi-publish-go-sdk-action
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b "publish-go-sdk-${GITHUB_SHA}"

      - name: Clean directory
        shell: bash
        if: inputs.additive != 'true'
        working-directory: ${{ runner.temp }}/pulumi-publish-go-sdk-action
        run: |
          find . -mindepth 1 -maxdepth 1 ! -name '.git' ! -name README.md ! -name LICENCE -exec rm -r {} +
          git add .

      - name: Ensure path exists
        if: inputs.path != ''
        working-directory: ${{ runner.temp }}/pulumi-publish-go-sdk-action
        shell: bash
        run: mkdir -p "${{ inputs.path }}"

      - name: Copy files
        shell: bash
        working-directory: ${{ runner.temp }}/pulumi-publish-go-sdk-action
        run: |
          cp -r "${{ steps.abs_path.outputs.abs_path }}"/* "${{ inputs.path || '.' }}"
          git add .

      - name: Commit
        shell: bash
        working-directory: ${{ runner.temp }}/pulumi-publish-go-sdk-action
        run: |
          git commit -m "v${{ inputs.version }}" --allow-empty
          git tag "${{ steps.git_tag.outputs.git_tag }}"

      - name: Push
        shell: bash
        working-directory: ${{ runner.temp }}/pulumi-publish-go-sdk-action
        run: |
          git push origin "${{ steps.git_tag.outputs.git_tag }}"

      - name: Update Go package cache
        if: inputs.skip-go-get != 'true'
        shell: bash
        working-directory: ${{ runner.temp }}
        env:
          MODULE_SUFFIX: ${{ steps.major_version.outputs.major_version > 1 && format('/v{0}', steps.major_version.outputs.major_version) || '' }}
        run: |
          mkdir pulumi-publish-go-sdk-action-fetch
          cd pulumi-publish-go-sdk-action-fetch
          go mod init github.com/pulumi/publish-go-sdk-action/fetch
          go get github.com/${{ inputs.repository }}${{ inputs.path == '' && '' || format('/{0}', inputs.path) }}${{ env.MODULE_SUFFIX }}@v${{ inputs.version }}
